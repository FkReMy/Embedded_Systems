
02_TrafficLight_W_SEVEN_SEG.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000416  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000416  0000048a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000494  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000500  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ef0  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000802  00000000  00000000  000014e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000788  00000000  00000000  00001ce2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000180  00000000  00000000  0000246c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000528  00000000  00000000  000025ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000811  00000000  00000000  00002b14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00003325  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e1       	ldi	r30, 0x16	; 22
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 53 01 	call	0x2a6	; 0x2a6 <main>
  7a:	0c 94 09 02 	jmp	0x412	; 0x412 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_SetPinDir>:
			case 'D' :
				value = ((PIND&(1<<pin))>>pin);
			break;
		}
	return value;
}
  82:	82 34       	cpi	r24, 0x42	; 66
  84:	19 f1       	breq	.+70     	; 0xcc <DIO_SetPinDir+0x4a>
  86:	18 f4       	brcc	.+6      	; 0x8e <DIO_SetPinDir+0xc>
  88:	81 34       	cpi	r24, 0x41	; 65
  8a:	39 f0       	breq	.+14     	; 0x9a <DIO_SetPinDir+0x18>
  8c:	08 95       	ret
  8e:	83 34       	cpi	r24, 0x43	; 67
  90:	b1 f1       	breq	.+108    	; 0xfe <DIO_SetPinDir+0x7c>
  92:	84 34       	cpi	r24, 0x44	; 68
  94:	09 f4       	brne	.+2      	; 0x98 <DIO_SetPinDir+0x16>
  96:	4c c0       	rjmp	.+152    	; 0x130 <DIO_SetPinDir+0xae>
  98:	08 95       	ret
  9a:	41 30       	cpi	r20, 0x01	; 1
  9c:	59 f4       	brne	.+22     	; 0xb4 <DIO_SetPinDir+0x32>
  9e:	2a b3       	in	r18, 0x1a	; 26
  a0:	81 e0       	ldi	r24, 0x01	; 1
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	02 c0       	rjmp	.+4      	; 0xaa <DIO_SetPinDir+0x28>
  a6:	88 0f       	add	r24, r24
  a8:	99 1f       	adc	r25, r25
  aa:	6a 95       	dec	r22
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <DIO_SetPinDir+0x24>
  ae:	82 2b       	or	r24, r18
  b0:	8a bb       	out	0x1a, r24	; 26
  b2:	08 95       	ret
  b4:	2a b3       	in	r18, 0x1a	; 26
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <DIO_SetPinDir+0x3e>
  bc:	88 0f       	add	r24, r24
  be:	99 1f       	adc	r25, r25
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <DIO_SetPinDir+0x3a>
  c4:	80 95       	com	r24
  c6:	82 23       	and	r24, r18
  c8:	8a bb       	out	0x1a, r24	; 26
  ca:	08 95       	ret
  cc:	41 30       	cpi	r20, 0x01	; 1
  ce:	59 f4       	brne	.+22     	; 0xe6 <DIO_SetPinDir+0x64>
  d0:	27 b3       	in	r18, 0x17	; 23
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	02 c0       	rjmp	.+4      	; 0xdc <DIO_SetPinDir+0x5a>
  d8:	88 0f       	add	r24, r24
  da:	99 1f       	adc	r25, r25
  dc:	6a 95       	dec	r22
  de:	e2 f7       	brpl	.-8      	; 0xd8 <DIO_SetPinDir+0x56>
  e0:	82 2b       	or	r24, r18
  e2:	87 bb       	out	0x17, r24	; 23
  e4:	08 95       	ret
  e6:	27 b3       	in	r18, 0x17	; 23
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <DIO_SetPinDir+0x70>
  ee:	88 0f       	add	r24, r24
  f0:	99 1f       	adc	r25, r25
  f2:	6a 95       	dec	r22
  f4:	e2 f7       	brpl	.-8      	; 0xee <DIO_SetPinDir+0x6c>
  f6:	80 95       	com	r24
  f8:	82 23       	and	r24, r18
  fa:	87 bb       	out	0x17, r24	; 23
  fc:	08 95       	ret
  fe:	41 30       	cpi	r20, 0x01	; 1
 100:	59 f4       	brne	.+22     	; 0x118 <DIO_SetPinDir+0x96>
 102:	24 b3       	in	r18, 0x14	; 20
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 c0       	rjmp	.+4      	; 0x10e <DIO_SetPinDir+0x8c>
 10a:	88 0f       	add	r24, r24
 10c:	99 1f       	adc	r25, r25
 10e:	6a 95       	dec	r22
 110:	e2 f7       	brpl	.-8      	; 0x10a <DIO_SetPinDir+0x88>
 112:	82 2b       	or	r24, r18
 114:	84 bb       	out	0x14, r24	; 20
 116:	08 95       	ret
 118:	24 b3       	in	r18, 0x14	; 20
 11a:	81 e0       	ldi	r24, 0x01	; 1
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_SetPinDir+0xa2>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	6a 95       	dec	r22
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_SetPinDir+0x9e>
 128:	80 95       	com	r24
 12a:	82 23       	and	r24, r18
 12c:	84 bb       	out	0x14, r24	; 20
 12e:	08 95       	ret
 130:	41 30       	cpi	r20, 0x01	; 1
 132:	59 f4       	brne	.+22     	; 0x14a <DIO_SetPinDir+0xc8>
 134:	21 b3       	in	r18, 0x11	; 17
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_SetPinDir+0xbe>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_SetPinDir+0xba>
 144:	82 2b       	or	r24, r18
 146:	81 bb       	out	0x11, r24	; 17
 148:	08 95       	ret
 14a:	21 b3       	in	r18, 0x11	; 17
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 c0       	rjmp	.+4      	; 0x156 <DIO_SetPinDir+0xd4>
 152:	88 0f       	add	r24, r24
 154:	99 1f       	adc	r25, r25
 156:	6a 95       	dec	r22
 158:	e2 f7       	brpl	.-8      	; 0x152 <DIO_SetPinDir+0xd0>
 15a:	80 95       	com	r24
 15c:	82 23       	and	r24, r18
 15e:	81 bb       	out	0x11, r24	; 17
 160:	08 95       	ret

00000162 <DIO_WritePin>:
 162:	82 34       	cpi	r24, 0x42	; 66
 164:	19 f1       	breq	.+70     	; 0x1ac <DIO_WritePin+0x4a>
 166:	18 f4       	brcc	.+6      	; 0x16e <DIO_WritePin+0xc>
 168:	81 34       	cpi	r24, 0x41	; 65
 16a:	39 f0       	breq	.+14     	; 0x17a <DIO_WritePin+0x18>
 16c:	08 95       	ret
 16e:	83 34       	cpi	r24, 0x43	; 67
 170:	b1 f1       	breq	.+108    	; 0x1de <DIO_WritePin+0x7c>
 172:	84 34       	cpi	r24, 0x44	; 68
 174:	09 f4       	brne	.+2      	; 0x178 <DIO_WritePin+0x16>
 176:	4c c0       	rjmp	.+152    	; 0x210 <DIO_WritePin+0xae>
 178:	08 95       	ret
 17a:	41 30       	cpi	r20, 0x01	; 1
 17c:	59 f4       	brne	.+22     	; 0x194 <DIO_WritePin+0x32>
 17e:	2b b3       	in	r18, 0x1b	; 27
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	02 c0       	rjmp	.+4      	; 0x18a <DIO_WritePin+0x28>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	6a 95       	dec	r22
 18c:	e2 f7       	brpl	.-8      	; 0x186 <DIO_WritePin+0x24>
 18e:	82 2b       	or	r24, r18
 190:	8b bb       	out	0x1b, r24	; 27
 192:	08 95       	ret
 194:	2b b3       	in	r18, 0x1b	; 27
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_WritePin+0x3e>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_WritePin+0x3a>
 1a4:	80 95       	com	r24
 1a6:	82 23       	and	r24, r18
 1a8:	8b bb       	out	0x1b, r24	; 27
 1aa:	08 95       	ret
 1ac:	41 30       	cpi	r20, 0x01	; 1
 1ae:	59 f4       	brne	.+22     	; 0x1c6 <DIO_WritePin+0x64>
 1b0:	28 b3       	in	r18, 0x18	; 24
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <DIO_WritePin+0x5a>
 1b8:	88 0f       	add	r24, r24
 1ba:	99 1f       	adc	r25, r25
 1bc:	6a 95       	dec	r22
 1be:	e2 f7       	brpl	.-8      	; 0x1b8 <DIO_WritePin+0x56>
 1c0:	82 2b       	or	r24, r18
 1c2:	88 bb       	out	0x18, r24	; 24
 1c4:	08 95       	ret
 1c6:	28 b3       	in	r18, 0x18	; 24
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <DIO_WritePin+0x70>
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	6a 95       	dec	r22
 1d4:	e2 f7       	brpl	.-8      	; 0x1ce <DIO_WritePin+0x6c>
 1d6:	80 95       	com	r24
 1d8:	82 23       	and	r24, r18
 1da:	88 bb       	out	0x18, r24	; 24
 1dc:	08 95       	ret
 1de:	41 30       	cpi	r20, 0x01	; 1
 1e0:	59 f4       	brne	.+22     	; 0x1f8 <DIO_WritePin+0x96>
 1e2:	25 b3       	in	r18, 0x15	; 21
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_WritePin+0x8c>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	6a 95       	dec	r22
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_WritePin+0x88>
 1f2:	82 2b       	or	r24, r18
 1f4:	85 bb       	out	0x15, r24	; 21
 1f6:	08 95       	ret
 1f8:	25 b3       	in	r18, 0x15	; 21
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_WritePin+0xa2>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_WritePin+0x9e>
 208:	80 95       	com	r24
 20a:	82 23       	and	r24, r18
 20c:	85 bb       	out	0x15, r24	; 21
 20e:	08 95       	ret
 210:	41 30       	cpi	r20, 0x01	; 1
 212:	59 f4       	brne	.+22     	; 0x22a <DIO_WritePin+0xc8>
 214:	20 b3       	in	r18, 0x10	; 16
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_WritePin+0xbe>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_WritePin+0xba>
 224:	82 2b       	or	r24, r18
 226:	80 bb       	out	0x10, r24	; 16
 228:	08 95       	ret
 22a:	20 b3       	in	r18, 0x10	; 16
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_WritePin+0xd4>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_WritePin+0xd0>
 23a:	80 95       	com	r24
 23c:	82 23       	and	r24, r18
 23e:	80 bb       	out	0x10, r24	; 16
 240:	08 95       	ret

00000242 <DIO_SetPortDir>:

void DIO_SetPortDir(unsigned char port, unsigned char dir)
{
	switch(port)
 242:	82 34       	cpi	r24, 0x42	; 66
 244:	59 f0       	breq	.+22     	; 0x25c <DIO_SetPortDir+0x1a>
 246:	18 f4       	brcc	.+6      	; 0x24e <DIO_SetPortDir+0xc>
 248:	81 34       	cpi	r24, 0x41	; 65
 24a:	31 f0       	breq	.+12     	; 0x258 <DIO_SetPortDir+0x16>
 24c:	08 95       	ret
 24e:	83 34       	cpi	r24, 0x43	; 67
 250:	39 f0       	breq	.+14     	; 0x260 <DIO_SetPortDir+0x1e>
 252:	84 34       	cpi	r24, 0x44	; 68
 254:	39 f0       	breq	.+14     	; 0x264 <DIO_SetPortDir+0x22>
 256:	08 95       	ret
	{
		//Port A
		case 'A' :
			DDRA = dir;
 258:	6a bb       	out	0x1a, r22	; 26
		break;
 25a:	08 95       	ret
		
		//Port B
		case 'B' :
			DDRB = dir;
 25c:	67 bb       	out	0x17, r22	; 23
		break;
 25e:	08 95       	ret
		
		//Port C
		case 'C' :
			DDRC = dir;
 260:	64 bb       	out	0x14, r22	; 20
		break;
 262:	08 95       	ret
		
		//Port D
		case 'D' :
			DDRD = dir;
 264:	61 bb       	out	0x11, r22	; 17
 266:	08 95       	ret

00000268 <DIO_WritePort>:
	}
}

void DIO_WritePort(unsigned char port, unsigned char val)
{
	switch(port)
 268:	82 34       	cpi	r24, 0x42	; 66
 26a:	59 f0       	breq	.+22     	; 0x282 <DIO_WritePort+0x1a>
 26c:	18 f4       	brcc	.+6      	; 0x274 <DIO_WritePort+0xc>
 26e:	81 34       	cpi	r24, 0x41	; 65
 270:	31 f0       	breq	.+12     	; 0x27e <DIO_WritePort+0x16>
 272:	08 95       	ret
 274:	83 34       	cpi	r24, 0x43	; 67
 276:	39 f0       	breq	.+14     	; 0x286 <DIO_WritePort+0x1e>
 278:	84 34       	cpi	r24, 0x44	; 68
 27a:	39 f0       	breq	.+14     	; 0x28a <DIO_WritePort+0x22>
 27c:	08 95       	ret
	{
		//Port A
		case 'A' :
			PORTA = val;
 27e:	6b bb       	out	0x1b, r22	; 27
		break;
 280:	08 95       	ret
		
		//Port B
		case 'B' :
			PORTB = val;
 282:	68 bb       	out	0x18, r22	; 24
		break;
 284:	08 95       	ret
		
		//Port C
		case 'C' :
			PORTC = val;
 286:	65 bb       	out	0x15, r22	; 21
		break;
 288:	08 95       	ret
		
		//Port D
		case 'D' :
			PORTD = val;
 28a:	60 bb       	out	0x10, r22	; 16
 28c:	08 95       	ret

0000028e <LED_Init>:
#include "DIO_interface.h"

void LED_Init(unsigned char port, unsigned char pin)
{
	DIO_SetPinDir(port,pin,1);
 28e:	41 e0       	ldi	r20, 0x01	; 1
 290:	0e 94 41 00 	call	0x82	; 0x82 <DIO_SetPinDir>
 294:	08 95       	ret

00000296 <LED_On>:
}

void LED_On(unsigned char port, unsigned char pin)
{
	DIO_WritePin(port,pin,1);
 296:	41 e0       	ldi	r20, 0x01	; 1
 298:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_WritePin>
 29c:	08 95       	ret

0000029e <LED_Off>:
}

void LED_Off(unsigned char port, unsigned char pin)
{
	DIO_WritePin(port,pin,0);
 29e:	40 e0       	ldi	r20, 0x00	; 0
 2a0:	0e 94 b1 00 	call	0x162	; 0x162 <DIO_WritePin>
 2a4:	08 95       	ret

000002a6 <main>:
#include "LED_interface.h"

int main(void)
{
	//Tens
	SEVEN_SEG_Init(portd);
 2a6:	84 e4       	ldi	r24, 0x44	; 68
 2a8:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <SEVEN_SEG_Init>
	//Units
	SEVEN_SEG_Init(portc);
 2ac:	83 e4       	ldi	r24, 0x43	; 67
 2ae:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <SEVEN_SEG_Init>
	
	//Red
	LED_Init(porta,pin0);
 2b2:	60 e0       	ldi	r22, 0x00	; 0
 2b4:	81 e4       	ldi	r24, 0x41	; 65
 2b6:	0e 94 47 01 	call	0x28e	; 0x28e <LED_Init>
	//Yellow
	LED_Init(porta,pin1);
 2ba:	61 e0       	ldi	r22, 0x01	; 1
 2bc:	81 e4       	ldi	r24, 0x41	; 65
 2be:	0e 94 47 01 	call	0x28e	; 0x28e <LED_Init>
	//Green
	LED_Init(porta,pin2);
 2c2:	62 e0       	ldi	r22, 0x02	; 2
 2c4:	81 e4       	ldi	r24, 0x41	; 65
 2c6:	0e 94 47 01 	call	0x28e	; 0x28e <LED_Init>
		unsigned char red = 9;
		unsigned char yellow = 5;
		unsigned char green = 8;
		
		//red
		for(int i = red; i >= 0; i--)
 2ca:	c9 e0       	ldi	r28, 0x09	; 9
 2cc:	d0 e0       	ldi	r29, 0x00	; 0
 2ce:	74 c0       	rjmp	.+232    	; 0x3b8 <main+0x112>
		{	
			LED_Off(porta,pin2);
 2d0:	62 e0       	ldi	r22, 0x02	; 2
 2d2:	81 e4       	ldi	r24, 0x41	; 65
 2d4:	0e 94 4f 01 	call	0x29e	; 0x29e <LED_Off>
			LED_On(porta,pin0);
 2d8:	60 e0       	ldi	r22, 0x00	; 0
 2da:	81 e4       	ldi	r24, 0x41	; 65
 2dc:	0e 94 4b 01 	call	0x296	; 0x296 <LED_On>
				
			SEVEN_SEG_Write(portc,i);
 2e0:	6c 2f       	mov	r22, r28
 2e2:	83 e4       	ldi	r24, 0x43	; 67
 2e4:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <SEVEN_SEG_Write>
			SEVEN_SEG_Write(portd,i);
 2e8:	6c 2f       	mov	r22, r28
 2ea:	84 e4       	ldi	r24, 0x44	; 68
 2ec:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <SEVEN_SEG_Write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2f0:	2f ef       	ldi	r18, 0xFF	; 255
 2f2:	89 e6       	ldi	r24, 0x69	; 105
 2f4:	98 e1       	ldi	r25, 0x18	; 24
 2f6:	21 50       	subi	r18, 0x01	; 1
 2f8:	80 40       	sbci	r24, 0x00	; 0
 2fa:	90 40       	sbci	r25, 0x00	; 0
 2fc:	e1 f7       	brne	.-8      	; 0x2f6 <main+0x50>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0x5a>
 300:	00 00       	nop
			_delay_ms(1000);
				
			//yellow
			if (i == 0)
 302:	20 97       	sbiw	r28, 0x00	; 0
 304:	09 f0       	breq	.+2      	; 0x308 <main+0x62>
 306:	57 c0       	rjmp	.+174    	; 0x3b6 <main+0x110>
			{
				//red at 0
				SEVEN_SEG_Write(portc,i);
 308:	6c 2f       	mov	r22, r28
 30a:	83 e4       	ldi	r24, 0x43	; 67
 30c:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <SEVEN_SEG_Write>
				SEVEN_SEG_Write(portd,i);
 310:	6c 2f       	mov	r22, r28
 312:	84 e4       	ldi	r24, 0x44	; 68
 314:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <SEVEN_SEG_Write>
					
				for (int j = yellow; j>=0; j--)
 318:	05 e0       	ldi	r16, 0x05	; 5
 31a:	10 e0       	ldi	r17, 0x00	; 0
 31c:	49 c0       	rjmp	.+146    	; 0x3b0 <main+0x10a>
				{
					LED_Off(porta,pin0);
 31e:	60 e0       	ldi	r22, 0x00	; 0
 320:	81 e4       	ldi	r24, 0x41	; 65
 322:	0e 94 4f 01 	call	0x29e	; 0x29e <LED_Off>
					LED_On(porta,pin1);
 326:	61 e0       	ldi	r22, 0x01	; 1
 328:	81 e4       	ldi	r24, 0x41	; 65
 32a:	0e 94 4b 01 	call	0x296	; 0x296 <LED_On>
						
					SEVEN_SEG_Write(portc,j);
 32e:	60 2f       	mov	r22, r16
 330:	83 e4       	ldi	r24, 0x43	; 67
 332:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <SEVEN_SEG_Write>
					SEVEN_SEG_Write(portd,j);
 336:	60 2f       	mov	r22, r16
 338:	84 e4       	ldi	r24, 0x44	; 68
 33a:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <SEVEN_SEG_Write>
 33e:	2f ef       	ldi	r18, 0xFF	; 255
 340:	89 e6       	ldi	r24, 0x69	; 105
 342:	98 e1       	ldi	r25, 0x18	; 24
 344:	21 50       	subi	r18, 0x01	; 1
 346:	80 40       	sbci	r24, 0x00	; 0
 348:	90 40       	sbci	r25, 0x00	; 0
 34a:	e1 f7       	brne	.-8      	; 0x344 <main+0x9e>
 34c:	00 c0       	rjmp	.+0      	; 0x34e <main+0xa8>
 34e:	00 00       	nop
					_delay_ms(1000);
						
					//green
					if (j == 0)
 350:	01 15       	cp	r16, r1
 352:	11 05       	cpc	r17, r1
 354:	59 f5       	brne	.+86     	; 0x3ac <main+0x106>
					{
						//yellow at 0
						SEVEN_SEG_Write(portc,j);
 356:	60 2f       	mov	r22, r16
 358:	83 e4       	ldi	r24, 0x43	; 67
 35a:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <SEVEN_SEG_Write>
						SEVEN_SEG_Write(portd,j);
 35e:	60 2f       	mov	r22, r16
 360:	84 e4       	ldi	r24, 0x44	; 68
 362:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <SEVEN_SEG_Write>
							
						for (int k = green; k >=0; k--)
 366:	68 94       	set
 368:	ee 24       	eor	r14, r14
 36a:	e3 f8       	bld	r14, 3
 36c:	f1 2c       	mov	r15, r1
 36e:	1c c0       	rjmp	.+56     	; 0x3a8 <main+0x102>
						{
							LED_Off(porta,pin1);
 370:	61 e0       	ldi	r22, 0x01	; 1
 372:	81 e4       	ldi	r24, 0x41	; 65
 374:	0e 94 4f 01 	call	0x29e	; 0x29e <LED_Off>
							LED_On(porta,pin2);
 378:	62 e0       	ldi	r22, 0x02	; 2
 37a:	81 e4       	ldi	r24, 0x41	; 65
 37c:	0e 94 4b 01 	call	0x296	; 0x296 <LED_On>
								
							SEVEN_SEG_Write(portd,k);
 380:	6e 2d       	mov	r22, r14
 382:	84 e4       	ldi	r24, 0x44	; 68
 384:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <SEVEN_SEG_Write>
							SEVEN_SEG_Write(portc,k);
 388:	6e 2d       	mov	r22, r14
 38a:	83 e4       	ldi	r24, 0x43	; 67
 38c:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <SEVEN_SEG_Write>
 390:	2f ef       	ldi	r18, 0xFF	; 255
 392:	89 e6       	ldi	r24, 0x69	; 105
 394:	98 e1       	ldi	r25, 0x18	; 24
 396:	21 50       	subi	r18, 0x01	; 1
 398:	80 40       	sbci	r24, 0x00	; 0
 39a:	90 40       	sbci	r25, 0x00	; 0
 39c:	e1 f7       	brne	.-8      	; 0x396 <main+0xf0>
 39e:	00 c0       	rjmp	.+0      	; 0x3a0 <main+0xfa>
 3a0:	00 00       	nop
					{
						//yellow at 0
						SEVEN_SEG_Write(portc,j);
						SEVEN_SEG_Write(portd,j);
							
						for (int k = green; k >=0; k--)
 3a2:	21 e0       	ldi	r18, 0x01	; 1
 3a4:	e2 1a       	sub	r14, r18
 3a6:	f1 08       	sbc	r15, r1
 3a8:	ff 20       	and	r15, r15
 3aa:	14 f7       	brge	.-60     	; 0x370 <main+0xca>
			{
				//red at 0
				SEVEN_SEG_Write(portc,i);
				SEVEN_SEG_Write(portd,i);
					
				for (int j = yellow; j>=0; j--)
 3ac:	01 50       	subi	r16, 0x01	; 1
 3ae:	11 09       	sbc	r17, r1
 3b0:	11 23       	and	r17, r17
 3b2:	0c f0       	brlt	.+2      	; 0x3b6 <main+0x110>
 3b4:	b4 cf       	rjmp	.-152    	; 0x31e <main+0x78>
		unsigned char red = 9;
		unsigned char yellow = 5;
		unsigned char green = 8;
		
		//red
		for(int i = red; i >= 0; i--)
 3b6:	21 97       	sbiw	r28, 0x01	; 1
 3b8:	dd 23       	and	r29, r29
 3ba:	0c f0       	brlt	.+2      	; 0x3be <main+0x118>
 3bc:	89 cf       	rjmp	.-238    	; 0x2d0 <main+0x2a>
 3be:	85 cf       	rjmp	.-246    	; 0x2ca <main+0x24>

000003c0 <SEVEN_SEG_Init>:
#include "SEVEN_SEG_interface.h"
#include "SEVEN_SEG_config.h"

void SEVEN_SEG_Init(unsigned char port)
{
	DIO_SetPortDir(port,0xff);
 3c0:	6f ef       	ldi	r22, 0xFF	; 255
 3c2:	0e 94 21 01 	call	0x242	; 0x242 <DIO_SetPortDir>
 3c6:	08 95       	ret

000003c8 <SEVEN_SEG_Write>:
}

void SEVEN_SEG_Write(unsigned char port, unsigned char value)
{
 3c8:	cf 93       	push	r28
 3ca:	df 93       	push	r29
 3cc:	cd b7       	in	r28, 0x3d	; 61
 3ce:	de b7       	in	r29, 0x3e	; 62
 3d0:	2a 97       	sbiw	r28, 0x0a	; 10
 3d2:	0f b6       	in	r0, 0x3f	; 63
 3d4:	f8 94       	cli
 3d6:	de bf       	out	0x3e, r29	; 62
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	cd bf       	out	0x3d, r28	; 61
	#if defined CC
	unsigned char seven_seg[]={ 0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x47, 0x7f, 0x6f};
 3dc:	9a e0       	ldi	r25, 0x0A	; 10
 3de:	e0 e6       	ldi	r30, 0x60	; 96
 3e0:	f0 e0       	ldi	r31, 0x00	; 0
 3e2:	de 01       	movw	r26, r28
 3e4:	11 96       	adiw	r26, 0x01	; 1
 3e6:	01 90       	ld	r0, Z+
 3e8:	0d 92       	st	X+, r0
 3ea:	9a 95       	dec	r25
 3ec:	e1 f7       	brne	.-8      	; 0x3e6 <SEVEN_SEG_Write+0x1e>
		DIO_WritePort(port,seven_seg[value]);
 3ee:	e1 e0       	ldi	r30, 0x01	; 1
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	ec 0f       	add	r30, r28
 3f4:	fd 1f       	adc	r31, r29
 3f6:	e6 0f       	add	r30, r22
 3f8:	f1 1d       	adc	r31, r1
 3fa:	60 81       	ld	r22, Z
 3fc:	0e 94 34 01 	call	0x268	; 0x268 <DIO_WritePort>
	
	#if defined CA
	unsigned char seven_seg[]={ ~0x3f, ~0x06, ~0x5b, ~0x4f, ~0x66, ~0x6d, ~0x7d, ~0x47, ~0x7f, ~0x6f};
		DIO_WritePort(port,seven_seg[value]);
	#endif
}
 400:	2a 96       	adiw	r28, 0x0a	; 10
 402:	0f b6       	in	r0, 0x3f	; 63
 404:	f8 94       	cli
 406:	de bf       	out	0x3e, r29	; 62
 408:	0f be       	out	0x3f, r0	; 63
 40a:	cd bf       	out	0x3d, r28	; 61
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	08 95       	ret

00000412 <_exit>:
 412:	f8 94       	cli

00000414 <__stop_program>:
 414:	ff cf       	rjmp	.-2      	; 0x414 <__stop_program>
